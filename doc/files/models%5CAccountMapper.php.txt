<?php
/**
 * Model mapper class which offers methods to save and fetch account objects from the
 * corresponding database table.
 *
 * @author mkesselb, comoessl, polschan
 */
class Application_Model_AccountMapper
{
	/** DB table object, of type Zend_Db_Table_Abstract. */
    protected $_dbTable;

    /**
     * Sets the database table of this object to parameter database table.
     * Parameter shall be of type Zend_Db_Table_Abstract.
     * @param Zend_Db_Table_Abstract $dbTable	the database table object
     * @throws Exception
     * @return Application_Model_AccountMapper	this changed object
     */
    public function setDbTable($dbTable)
    {
        if (is_string($dbTable)) {
            $dbTable = new $dbTable();
        }
        if (!$dbTable instanceof Zend_Db_Table_Abstract) {
            throw new Exception('Invalid table data gateway provided');
        }
        $this->_dbTable = $dbTable;
        return $this;
    }

    /**
     * Returns the database table object.
     * @return Zend_Db_Table_Abstract
     */
    public function getDbTable()
    {
        if (null === $this->_dbTable) {
            $this->setDbTable('Application_Model_DbTable_Account');
        }
        return $this->_dbTable;
    }

    /**
     * Saves parameter account model object to the database table of this mapper.
     * @param Application_Model_Account $account	the account object to be saved
     */
    public function save(Application_Model_Account $account)
    {
        $data = array(
            'name' => $account->getName(),
            'code' => $account->getCode(),   
        );

        $this->getDbTable()->insert($data);
    }

    /**
     * Finds an account in the corresponding table with parameter id.
     * @param int $id	the id to be found
     * @param Application_Model_Account $account	the account object to be enriched
     */
    public function find($id, Application_Model_Account $account)
    {
        $result = $this->getDbTable()->find($id);
        if (0 == count($result)) {
            return;
        }
        $row = $result->current();
        $account->setId($row->id)
        ->setName($row->name)
        ->setCode($row->code);
    }

    /**
     * Updates the database table with parameter account.
     * @param Application_Model_Account $account	the account object to be saved
     */
    public function update(Application_Model_Account $account){
        $data = array(
            'name' => $account->getName(),
            'code' => $account->getCode(),
        );
        $id = $account->getId();
        $this->getDbTable()->update($data, array('id = ?' => $id));
    }

    /**
     * Finds the account data from the table by a specified field-value matching.
     * @param string $field	field name to be found
     * @param $value	value to be found
     * @param Application_Model_Account $account	the account object to be enriched
     */
    public function findByField($field, $value, Application_Model_Account $account){
        $row = $this->getDbTable()->fetchRow(
            $this->getDbTable()->select()
            ->where($field . ' = :value')
            ->bind(array(':value'=>$value)));
        if($row === null){
            return;
        }

        $account->setId($row->id)
        ->setName($row->name)
        ->setCode($row->code);
    }
}
