<?php
/**
 * Cost category model class, representing a cost category tied to an account.
 * The id of cost category objects are used in the mappers to save and edit account entries.
 *
 * @author mkesselb, comoessl, polschan
 */
class Application_Model_CostCategory
{
	/** Databse id of the cost category. */
    protected $id;
    
    /** Database account_id the cost category is tied to. */
    protected $account_id;
    
    /** Name of the cost category. */
    protected $name;

    /**
     * Constructor, setting all values from the parameter array that represent valid values.
     * @param array $options 	array of name-value pairs that shall be set for the new instance
     */
    public function __construct(array $options = null)
    {
        if (is_array($options)) {
            $this->setOptions($options);
        }
    }

    /**
     * 'Magic' setter method, providing a way to access the various set methods of this class.
     * @param $name		name of the setter method to be invoked
     * @param $value	value to be set
     * @throws Exception
     */
    public function __set($name, $value)
    {
        $method = 'set' . $name;
        if (('mapper' == $name) || !method_exists($this, $method)) {
            throw new Exception('Invalid cost category property');
        }
        $this->$method($value);
    }

    /**
     * 'Magic' getter method, providing a way to access the various get methods of this class.
     * @param $name		name of the getter method to be invoked
     * @throws Exception
     */
    public function __get($name)
    {
        $method = 'get' . $name;
        if (('mapper' == $name) || !method_exists($this, $method)) {
            throw new Exception('Invalid cost category property');
        }
        return $this->$method();
    }

    /**
     * Calls the setter specified in the parameter array with the corresponding values.
     * Returns the resulting object.
     * @param array $options	name-value, giving the name of the setter to be called with the corr. value
     * @return Application_Model_CostCategory	result from constructing a new instance and
     * 											invoking all specified setter
     */
    public function setOptions(array $options)
    {
        $methods = get_class_methods($this);
        foreach ($options as $key => $value) {
            $method = 'set' . ucfirst($key);
            if (in_array($method, $methods)) {
                $this->$method($value);
            }
        }
        return $this;
    }

    /**
     * Returns the account_id.
     */
    public function getAccountId(){
        return $this->account_id;
    }

    /**
     * Sets the account_id with parameter.
     * @param int $account_id	the account_id to be set
     * @return Application_Model_CostCategory	the changed object
     */
    public function setAccountId($account_id){
        $this->account_id = $account_id;
        return $this;
    }

    /**
     * Returns the name.
     */
    public function getName(){
        return $this->name;
    }

    /**
     * Sets the name with parameter.
     * @param string $name	the name to be set
     * @return Application_Model_CostCategory	the changed object
     */
    public function setName($name){
        $this->name = $name;
        return $this;
    }

    /**
     * Returns the id.
     */
    public function getId(){
        return $this->id;
    }

    /**
     * Sets the id with parameter.
     * @param int $id	the id to be set
     * @return Application_Model_CostCategory	the changed object
     */
    public function setId($id){
        $this->id = $id;
        return $this;
    }
}
